// Generated by Haxe 4.1.2
package color;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Convert extends haxe.lang.HxObject
{
	static
	{
		//line 8 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		java.lang.Object __temp_stmt1 = null;
		//line 8 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		{
			//line 8 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
			haxe.ds.StringMap<color.Color> _g = new haxe.ds.StringMap<color.Color>();
			//line 8 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
			_g.set("red", color.Color.Rgb(1.0, 0.0, 0.0));
			//line 8 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
			_g.set("yellow", color.Color.Rgb(1.0, 1.0, 0.0));
			//line 8 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
			_g.set("blue", color.Color.Rgb(0.0, 0.0, 1.0));
			//line 8 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
			__temp_stmt1 = _g;
		}
		
		//line 8 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		color.Convert.namedColors = ((haxe.ds.StringMap<color.Color>) (__temp_stmt1) );
	}
	
	public Convert(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Convert()
	{
		//line 6 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		color.Convert.__hx_ctor_color_Convert(this);
	}
	
	
	protected static void __hx_ctor_color_Convert(color.Convert __hx_this)
	{
	}
	
	
	public static haxe.ds.StringMap<color.Color> namedColors;
	
	public static color.Color colorToRgb(color.Color color1)
	{
		//line 15 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		switch (color1.index)
		{
			case 0:
			{
				//line 16 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				double _g = ((double) (haxe.lang.Runtime.toDouble(color1.params[2])) );
				//line 16 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				double _g1 = ((double) (haxe.lang.Runtime.toDouble(color1.params[1])) );
				//line 16 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				double _g2 = ((double) (haxe.lang.Runtime.toDouble(color1.params[0])) );
				//line 16 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				return color1;
			}
			
			
			case 1:
			{
				//line 17 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				double v = ((double) (haxe.lang.Runtime.toDouble(color1.params[2])) );
				//line 17 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				double s = ((double) (haxe.lang.Runtime.toDouble(color1.params[1])) );
				//line 17 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				double h = ((double) (haxe.lang.Runtime.toDouble(color1.params[0])) );
				//line 17 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				return color.Convert.hsvToRgb(h, s, v);
			}
			
			
			case 2:
			{
				//line 18 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				java.lang.String name = haxe.lang.Runtime.toString(color1.params[0]);
				//line 18 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				return ((color.Color) (((haxe.ds.StringMap<color.Color>) (((haxe.IMap<java.lang.String, color.Color>) (color.Convert.namedColors) )) ).get(name)) );
			}
			
			
		}
		
		//line 14 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		return null;
	}
	
	
	public static color.Color hsvToRgb(double h, double s, double v)
	{
		//line 24 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		double c = ( s * v );
		//line 25 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		double h1 = ( h * 6 );
		//line 26 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		double x = ( c * (( 1 - java.lang.Math.abs(( ( h1 % 2 ) - 1 )) )) );
		//line 27 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		color.Color rgb1 = ( (( h1 < 1 )) ? (color.Color.Rgb(c, x, ((double) (0) ))) : (( (( h1 < 2 )) ? (color.Color.Rgb(x, c, ((double) (0) ))) : (( (( h1 < 3 )) ? (color.Color.Rgb(((double) (0) ), c, x)) : (( (( h1 < 4 )) ? (color.Color.Rgb(((double) (0) ), x, c)) : (( (( h1 < 5 )) ? (color.Color.Rgb(x, ((double) (0) ), c)) : (color.Color.Rgb(c, ((double) (0) ), x)) )) )) )) )) );
		//line 34 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		double m = ( v - c );
		//line 35 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		color.Color rgb = null;
		//line 15 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Tools.hx"
		switch (rgb1.index)
		{
			case 0:
			{
				//line 35 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				double b = ((double) (haxe.lang.Runtime.toDouble(rgb1.params[2])) );
				//line 35 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				double g = ((double) (haxe.lang.Runtime.toDouble(rgb1.params[1])) );
				//line 35 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				double r = ((double) (haxe.lang.Runtime.toDouble(rgb1.params[0])) );
				//line 35 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
				rgb = color.Color.Rgb(( r + m ), ( g + m ), ( b + m ));
				//line 16 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Tools.hx"
				break;
			}
			
			
			default:
			{
				//line 17 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Tools.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown("no match")) );
			}
			
		}
		
		//line 36 "/mnt/c/Users/Tom/Documents/Projects/context-free/haxe/src/color/Convert.hx"
		return rgb;
	}
	
	
}


